[{"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\index.js":"1","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\App.jsx":"2","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\routes.js":"3","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\AlertContext\\AlertContext.js":"4","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\index.js":"5","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\layouts\\Layout.jsx":"6","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\layouts\\AlertPopup.jsx":"7","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\state.js":"8","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\useEth.js":"9","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\EthContext.js":"10","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\index.jsx":"11","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\doctor\\index.jsx":"12","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\patient\\index.jsx":"13","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\EthProvider.jsx":"14","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\AlertContext\\useAlert.js":"15","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\ipfs.js":"16","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\CustomButton.jsx":"17","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\doctor\\AddRecordModal.jsx":"18","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\Record.jsx":"19"},{"size":340,"mtime":1677308369082,"results":"20","hashOfConfig":"21"},{"size":372,"mtime":1677308331304,"results":"22","hashOfConfig":"21"},{"size":868,"mtime":1677308331953,"results":"23","hashOfConfig":"21"},{"size":724,"mtime":1677308334057,"results":"24","hashOfConfig":"21"},{"size":181,"mtime":1677308334326,"results":"25","hashOfConfig":"21"},{"size":1412,"mtime":1677308333951,"results":"26","hashOfConfig":"21"},{"size":757,"mtime":1677308333887,"results":"27","hashOfConfig":"21"},{"size":556,"mtime":1677308334391,"results":"28","hashOfConfig":"21"},{"size":145,"mtime":1677308334462,"results":"29","hashOfConfig":"21"},{"size":104,"mtime":1677308334204,"results":"30","hashOfConfig":"21"},{"size":4306,"mtime":1677308369143,"results":"31","hashOfConfig":"21"},{"size":7421,"mtime":1677308334637,"results":"32","hashOfConfig":"21"},{"size":2916,"mtime":1677308334732,"results":"33","hashOfConfig":"21"},{"size":1832,"mtime":1677308334270,"results":"34","hashOfConfig":"21"},{"size":155,"mtime":1677308334120,"results":"35","hashOfConfig":"21"},{"size":396,"mtime":1677308331798,"results":"36","hashOfConfig":"21"},{"size":603,"mtime":1677308332669,"results":"37","hashOfConfig":"21"},{"size":2432,"mtime":1677308334580,"results":"38","hashOfConfig":"21"},{"size":2024,"mtime":1677308332836,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lhi40h",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\index.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\App.jsx",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\routes.js",["84"],"// Guards\nimport Layout from './components/layouts/Layout'\nimport AlertPopup from './components/layouts/AlertPopup'\n\n// Pages\nimport Home from './pages'\nimport Patient from './pages/patient'\nimport Doctor from './pages/doctor'\nimport HeaderAppBar from './components/layouts/Layout'\n\nconst routes = [\n  {\n    path: '/',\n    children: [\n      {\n        path: '',\n        element: (\n          <>\n            <AlertPopup />\n            <Home />\n          </>\n        ),\n      },\n      {\n        path: 'patient',\n        element: (\n          <>\n            <HeaderAppBar />\n            <AlertPopup />\n            <Patient />\n          </>\n        ),\n      },\n      {\n        path: 'doctor',\n        element: (\n          <>\n            <HeaderAppBar />\n            <AlertPopup />\n            <Doctor />\n          </>\n        ),\n      },\n    ],\n  },\n]\n\nexport default routes\n","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\AlertContext\\AlertContext.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\index.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\layouts\\Layout.jsx",["85"],"import { AppBar, Chip, Toolbar, Box, Typography } from '@mui/material'\nimport React from 'react'\nimport useEth from '../../contexts/EthContext/useEth'\nimport PersonRoundedIcon from '@mui/icons-material/PersonRounded'\nimport logo from '../../assets/logo.png'\nimport { grey, teal, blue } from '@mui/material/colors'\n\nconst HeaderAppBar = () => {\n  const {\n    state: { accounts, role },\n  } = useEth()\n\n  return (\n    <AppBar position='static' style={{ backgroundColor: 'white' }}>\n      <Toolbar>\n        <Box display='flex' justifyContent='space-between' alignItems='center' width='100%'>\n          <a href='/'>\n            <img src={logo} alt='med-chain-logo' style={{ height: 80, weight: 80 }} />\n          </a>\n          <Box flexGrow={1} />\n          <Box display='flex' alignItems='center'>\n            <Box mb={0.1}>\n              <PersonRoundedIcon style={{ color: grey[700], fontSize: '22px' }} />\n            </Box>\n            <Box ml={0.5} mr={2}>\n              <Typography variant='h6' color='black'>\n                {accounts ? accounts[0] : 'Wallet not connected'}\n              </Typography>\n            </Box>\n            <Chip\n              label={role === 'unknown' ? 'not registered' : role}\n              style={{ fontSize: '12px', backgroundColor: blue['600'], color: 'white' }}\n            />\n          </Box>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  )\n}\nexport default HeaderAppBar\n","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\layouts\\AlertPopup.jsx",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\state.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\useEth.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\EthContext.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\index.jsx",["86","87","88"],"import { Box, Typography, Backdrop, CircularProgress, Divider } from '@mui/material'\nimport React from 'react'\nimport AccountBalanceWalletRoundedIcon from '@mui/icons-material/AccountBalanceWalletRounded'\nimport VideoCover from 'react-video-cover'\nimport BackgroundVideo from '../assets/BackgroundVideo.mp4'\nimport logo from '../assets/logo.png'\nimport useEth from '../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport CustomButton from '../components/CustomButton'\nimport { useNavigate } from 'react-router-dom'\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded'\nimport { grey } from '@mui/material/colors'\nimport '../App.css'\n\nconst Home = () => {\n  const {\n    state: { contract, accounts, role, loading },\n    dispatch,\n  } = useEth()\n  const navigate = useNavigate()\n\n  const registerDoctor = async () => {\n    try {\n      await contract.methods.addDoctor().send({ from: accounts[0] })\n      dispatch({\n        type: 'ADD_DOCTOR',\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const ActionSection = () => {\n    if (!accounts) {\n      return (\n        <Typography variant='h5' color='white'>\n          Open your MetaMask wallet to get connected, then refresh this page\n        </Typography>\n      )\n    } else {\n      if (role === 'unknown') {\n        return (\n          <Box display='flex' flexDirection='column' alignItems='center'>\n            <Box mb={2}>\n              <CustomButton text='Doctor Register' handleClick={() => registerDoctor()}>\n                <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n              </CustomButton>\n            </Box>\n            <Typography variant='h5' color='white'>\n              If you are a patient, ask your doctor to register for you\n            </Typography>\n          </Box>\n        )\n      } else if (role === 'patient') {\n        return (\n          <CustomButton text='Patient Portal' handleClick={() => navigate('/patient')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      } else if (role === 'doctor') {\n        return (\n          <CustomButton text='Doctor Portal' handleClick={() => navigate('/doctor')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      }\n    }\n  }\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n        width='100vw'\n        height='100vh'\n        id='background'\n      >\n        <Box\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            top: 0,\n            left: 0,\n            zIndex: -1,\n          }}\n        >\n          <VideoCover\n            videoOptions={{\n              src: BackgroundVideo,\n              autoPlay: true,\n              loop: true,\n              muted: true,\n            }}\n          />\n        </Box>\n        <Box id='home-page-box' display='flex' flexDirection='column' justifyContent='center' alignItems='center' p={5}>\n          <img src={logo} alt='med-chain-logo' style={{ height: 300, weight: 400 }} />\n          <Box mb={3}>\n            <Typography variant='h4' color='white'>\n              Own Your Health\n            </Typography>\n          </Box>\n          <ActionSection />\n          <Box display='flex' alignItems='center' mt={2}>\n            <Typography variant='h5' color='white'>\n              powered by{' '}\n            </Typography>\n            <Box mx={1}>\n              <img\n                src='https://cdn.worldvectorlogo.com/logos/ethereum-1.svg'\n                alt='Ethereum logo vector'\n                style={{ height: 20 }}\n              ></img>\n            </Box>\n            <img\n              src='https://upload.wikimedia.org/wikipedia/commons/1/18/Ipfs-logo-1024-ice-text.png'\n              alt='Ethereum logo vector'\n              style={{ height: 20 }}\n            ></img>\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Home\n","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\doctor\\index.jsx",["89"],"import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport { useState } from 'react'\nimport CustomButton from '../../components/CustomButton'\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded'\nimport useEth from '../../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport useAlert from '../../contexts/AlertContext/useAlert'\nimport AddRecordModal from './AddRecordModal'\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded'\nimport ipfs from '../../ipfs'\nimport Record from '../../components/Record'\n\nconst Doctor = () => {\n  const {\n    state: { contract, accounts, role, loading },\n  } = useEth()\n  const { setAlert } = useAlert()\n\n  const [patientExist, setPatientExist] = useState(false)\n  const [searchPatientAddress, setSearchPatientAddress] = useState('')\n  const [addPatientAddress, setAddPatientAddress] = useState('')\n  const [records, setRecords] = useState([])\n  const [addRecord, setAddRecord] = useState(false)\n\n  const searchPatient = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\n        setAlert('Please enter a valid wallet address', 'error')\n        return\n      }\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({ from: accounts[0] })\n      if (patientExists) {\n        const records = await contract.methods.getRecords(searchPatientAddress).call({ from: accounts[0] })\n        console.log('records :>> ', records)\n        setRecords(records)\n        setPatientExist(true)\n      } else {\n        setAlert('Patient does not exist', 'error')\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const registerPatient = async () => {\n    try {\n      await contract.methods.addPatient(addPatientAddress).send({ from: accounts[0] })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const addRecordCallback = useCallback(\n    async (buffer, fileName, patientAddress) => {\n      if (!patientAddress) {\n        setAlert('Please search for a patient first', 'error')\n        return\n      }\n      try {\n        const res = await ipfs.add(buffer)\n        const ipfsHash = res[0].hash\n        if (ipfsHash) {\n          await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({ from: accounts[0] })\n          setAlert('New record uploaded', 'success')\n          setAddRecord(false)\n\n          // refresh records\n          const records = await contract.methods.getRecords(patientAddress).call({ from: accounts[0] })\n          setRecords(records)\n        }\n      } catch (err) {\n        setAlert('Record upload failed', 'error')\n        console.error(err)\n      }\n    },\n    [addPatientAddress, accounts, contract]\n  )\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box display='flex' justifyContent='center' width='100vw'>\n        <Box width='60%' my={5}>\n          {!accounts ? (\n            <Box display='flex' justifyContent='center'>\n              <Typography variant='h6'>Open your MetaMask wallet to get connected, then refresh this page</Typography>\n            </Box>\n          ) : (\n            <>\n              {role === 'unknown' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>You're not registered, please go to home page</Typography>\n                </Box>\n              )}\n              {role === 'patient' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>Only doctor can access this page</Typography>\n                </Box>\n              )}\n              {role === 'doctor' && (\n                <>\n                  <Modal open={addRecord} onClose={() => setAddRecord(false)}>\n                    <AddRecordModal\n                      handleClose={() => setAddRecord(false)}\n                      handleUpload={addRecordCallback}\n                      patientAddress={searchPatientAddress}\n                    />\n                  </Modal>\n\n                  <Typography variant='h4'>Patient Records</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder='Search patient by wallet address'\n                        value={searchPatientAddress}\n                        onChange={e => setSearchPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Search'} handleClick={() => searchPatient()}>\n                        <SearchRoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                    <CustomButton text={'New Record'} handleClick={() => setAddRecord(true)} disabled={!patientExist}>\n                      <CloudUploadRoundedIcon style={{ color: 'white' }} />\n                    </CustomButton>\n                  </Box>\n\n                  {patientExist && records.length === 0 && (\n                    <Box display='flex' alignItems='center' justifyContent='center' my={5}>\n                      <Typography variant='h5'>No records found</Typography>\n                    </Box>\n                  )}\n\n                  {patientExist && records.length > 0 && (\n                    <Box display='flex' flexDirection='column' mt={3} mb={-2}>\n                      {records.map((record, index) => (\n                        <Box mb={2}>\n                          <Record key={index} record={record} />\n                        </Box>\n                      ))}\n                    </Box>\n                  )}\n\n                  <Box mt={6} mb={4}>\n                    <Divider />\n                  </Box>\n\n                  <Typography variant='h4'>Register Patient</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder='Register patient by wallet address'\n                        value={addPatientAddress}\n                        onChange={e => setAddPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Register'} handleClick={() => registerPatient()}>\n                        <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                  </Box>\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Doctor\n","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\patient\\index.jsx",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\EthContext\\EthProvider.jsx",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\contexts\\AlertContext\\useAlert.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\ipfs.js",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\CustomButton.jsx",["90","91"],"import React from 'react'\nimport { Box, Button, Typography } from '@mui/material'\nimport { grey, teal, blue } from '@mui/material/colors'\n\nconst CustomButton = ({ text, handleClick, disabled = false, children }) => {\n  return (\n    <Button\n      startIcon={children}\n      style={{\n        backgroundColor: disabled ? grey[400] : blue['600'],\n        textTransform: 'none',\n        padding: '10px 20px',\n      }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <Typography variant='h5' color='white'>\n        {text}\n      </Typography>\n    </Button>\n  )\n}\n\nexport default CustomButton\n","C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\pages\\doctor\\AddRecordModal.jsx",[],"C:\\Users\\Shreyas\\Desktop\\DREAMS\\DMR-master\\DREAMS-system\\client\\src\\components\\Record.jsx",["92","93"],"import { Card, CardContent, IconButton, Typography, Grid, Box } from '@mui/material'\nimport React from 'react'\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded'\nimport { grey } from '@mui/material/colors'\nimport moment from 'moment'\nimport CloudDownloadRoundedIcon from '@mui/icons-material/CloudDownloadRounded'\nimport { useNavigate } from 'react-router-dom'\n\nconst Record = ({ record }) => {\n  const [cid, name, patientId, doctorId, timestamp] = record\n  const navigate = useNavigate()\n\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={1}>\n            <DescriptionRoundedIcon style={{ fontSize: 40, color: grey[700] }} />\n          </Grid>\n          <Grid item xs={3}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Record name\n              </Typography>\n              <Typography variant='h6'>{name}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={5}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Doctor\n              </Typography>\n              <Typography variant='h6'>{doctorId}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={2}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Created time\n              </Typography>\n              <Typography variant='h6'>{moment.unix(timestamp).format('MM-DD-YYYY HH:mm')}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={1}>\n            <a href={`https://med-chain.infura-ipfs.io/ipfs/${cid}`} target='_blank' rel='noopener noreferrer'>\n              <IconButton>\n                <CloudDownloadRoundedIcon fontSize='large' />\n              </IconButton>\n            </a>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Record\n",{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":6,"column":16,"nodeType":"96","messageId":"97","endLine":6,"endColumn":20},{"ruleId":"94","severity":1,"message":"99","line":1,"column":55,"nodeType":"96","messageId":"97","endLine":1,"endColumn":62},{"ruleId":"94","severity":1,"message":"100","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":39},{"ruleId":"94","severity":1,"message":"101","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":77,"column":5,"nodeType":"104","endLine":77,"endColumn":44,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":3,"column":16,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"107","line":10,"column":21,"nodeType":"96","messageId":"97","endLine":10,"endColumn":30},{"ruleId":"94","severity":1,"message":"108","line":11,"column":9,"nodeType":"96","messageId":"97","endLine":11,"endColumn":17},"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'teal' is defined but never used.","'Divider' is defined but never used.","'AccountBalanceWalletRoundedIcon' is defined but never used.","'grey' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setAlert'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'Box' is defined but never used.","'patientId' is assigned a value but never used.","'navigate' is assigned a value but never used.",{"desc":"110","fix":"111"},"Update the dependencies array to be: [setAlert, contract.methods, accounts]",{"range":"112","text":"113"},[2816,2855],"[setAlert, contract.methods, accounts]"]