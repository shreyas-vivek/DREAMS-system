{"ast":null,"code":"'use strict';\n\nconst dagNodeUtil = require('./util');\n\nconst cloneLinks = dagNodeUtil.cloneLinks;\nconst cloneData = dagNodeUtil.cloneData;\nconst toDAGLink = dagNodeUtil.toDAGLink;\n\nconst DAGLink = require('../dag-link');\n\nconst DAGNode = require('./index');\n\nconst create = require('./create');\n\nconst asDAGLink = async link => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link;\n  }\n\n  if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    return toDAGLink(link, {});\n  } // It's a Object with name, multihash/hash/cid and size\n\n\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid);\n};\n\nconst addLink = async (node, link) => {\n  const links = cloneLinks(node);\n  const data = cloneData(node);\n  const dagLink = await asDAGLink(link);\n  links.push(dagLink);\n  return create(data, links);\n};\n\nmodule.exports = addLink;","map":{"version":3,"names":["dagNodeUtil","require","cloneLinks","cloneData","toDAGLink","DAGLink","DAGNode","create","asDAGLink","link","isDAGLink","isDAGNode","Name","name","Tsize","size","Hash","multihash","hash","cid","addLink","node","links","data","dagLink","push","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipld-dag-pb/src/dag-node/addLink.js"],"sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst toDAGLink = dagNodeUtil.toDAGLink\nconst DAGLink = require('../dag-link')\nconst DAGNode = require('./index')\nconst create = require('./create')\n\nconst asDAGLink = async (link) => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link\n  }\n\n  if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    return toDAGLink(link, {})\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\n}\n\nconst addLink = async (node, link) => {\n  const links = cloneLinks(node)\n  const data = cloneData(node)\n\n  const dagLink = await asDAGLink(link)\n  links.push(dagLink)\n  return create(data, links)\n}\n\nmodule.exports = addLink\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;;AACA,MAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,MAAMC,SAAS,GAAGH,WAAW,CAACG,SAA9B;AACA,MAAMC,SAAS,GAAGJ,WAAW,CAACI,SAA9B;;AACA,MAAMC,OAAO,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMO,SAAS,GAAG,MAAOC,IAAP,IAAgB;EAChC,IAAIJ,OAAO,CAACK,SAAR,CAAkBD,IAAlB,CAAJ,EAA6B;IAC3B;IACA;IACA,OAAOA,IAAP;EACD;;EAED,IAAIH,OAAO,CAACK,SAAR,CAAkBF,IAAlB,CAAJ,EAA6B;IAC3B;IACA;IACA,OAAOL,SAAS,CAACK,IAAD,EAAO,EAAP,CAAhB;EACD,CAX+B,CAahC;;;EACA,OAAO,IAAIJ,OAAJ,CAAYI,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACI,IAA9B,EAAoCJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,IAAvD,EAA6DN,IAAI,CAACO,IAAL,IAAaP,IAAI,CAACQ,SAAlB,IAA+BR,IAAI,CAACS,IAApC,IAA4CT,IAAI,CAACU,GAA9G,CAAP;AACD,CAfD;;AAiBA,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaZ,IAAb,KAAsB;EACpC,MAAMa,KAAK,GAAGpB,UAAU,CAACmB,IAAD,CAAxB;EACA,MAAME,IAAI,GAAGpB,SAAS,CAACkB,IAAD,CAAtB;EAEA,MAAMG,OAAO,GAAG,MAAMhB,SAAS,CAACC,IAAD,CAA/B;EACAa,KAAK,CAACG,IAAN,CAAWD,OAAX;EACA,OAAOjB,MAAM,CAACgB,IAAD,EAAOD,KAAP,CAAb;AACD,CAPD;;AASAI,MAAM,CAACC,OAAP,GAAiBP,OAAjB"},"metadata":{},"sourceType":"script"}