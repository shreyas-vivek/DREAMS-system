{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst multiaddr = require('multiaddr');\n\nconst PeerId = require('peer-id');\n\nmodule.exports = send => {\n  return promisify((opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    const verbose = opts.v || opts.verbose;\n    send({\n      path: 'swarm/peers',\n      qs: opts\n    }, (err, response) => {\n      if (err) {\n        return callback(err);\n      }\n\n      const peerInfo = parsePeersResponse(verbose, response);\n      callback(null, peerInfo);\n    });\n  });\n};\n\nfunction parsePeersResponse(verbose, response) {\n  // go-ipfs <= 0.4.4\n  if (Array.isArray(response.Strings)) {\n    return response.Strings.map(parseLegacyPeer.bind(null, verbose));\n  } // go-ipfs >= 0.4.5\n\n\n  if (Array.isArray(response.Peers)) {\n    return response.Peers.map(parsePeer.bind(null, verbose));\n  }\n\n  return [];\n}\n\nfunction parseLegacyPeer(verbose, peer) {\n  const res = {};\n\n  try {\n    if (verbose) {\n      const parts = peer.split(' ');\n      res.addr = multiaddr(parts[0]);\n      res.latency = parts[1];\n    } else {\n      res.addr = multiaddr(peer);\n    }\n\n    res.peer = PeerId.createFromB58String(res.addr.getPeerId());\n  } catch (error) {\n    res.error = error;\n    res.rawPeerInfo = peer;\n  }\n\n  return res;\n}\n\nfunction parsePeer(verbose, peer) {\n  const res = {};\n\n  try {\n    res.addr = multiaddr(peer.Addr);\n    res.peer = PeerId.createFromB58String(peer.Peer);\n    res.muxer = peer.Muxer;\n  } catch (error) {\n    res.error = error;\n    res.rawPeerInfo = peer;\n  }\n\n  if (peer.Latency) {\n    res.latency = peer.Latency;\n  }\n\n  if (peer.Streams) {\n    res.streams = peer.Streams;\n  }\n\n  return res;\n}","map":{"version":3,"names":["promisify","require","multiaddr","PeerId","module","exports","send","opts","callback","verbose","v","path","qs","err","response","peerInfo","parsePeersResponse","Array","isArray","Strings","map","parseLegacyPeer","bind","Peers","parsePeer","peer","res","parts","split","addr","latency","createFromB58String","getPeerId","error","rawPeerInfo","Addr","Peer","muxer","Muxer","Latency","Streams","streams"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipfs-http-client/src/swarm/peers.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst multiaddr = require('multiaddr')\nconst PeerId = require('peer-id')\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    const verbose = opts.v || opts.verbose\n    send({\n      path: 'swarm/peers',\n      qs: opts\n    }, (err, response) => {\n      if (err) {\n        return callback(err)\n      }\n      const peerInfo = parsePeersResponse(verbose, response)\n      callback(null, peerInfo)\n    })\n  })\n}\n\nfunction parsePeersResponse (verbose, response) {\n  // go-ipfs <= 0.4.4\n  if (Array.isArray(response.Strings)) {\n    return response.Strings.map(parseLegacyPeer.bind(null, verbose))\n  }\n  // go-ipfs >= 0.4.5\n  if (Array.isArray(response.Peers)) {\n    return response.Peers.map(parsePeer.bind(null, verbose))\n  }\n  return []\n}\n\nfunction parseLegacyPeer (verbose, peer) {\n  const res = {}\n  try {\n    if (verbose) {\n      const parts = peer.split(' ')\n      res.addr = multiaddr(parts[0])\n      res.latency = parts[1]\n    } else {\n      res.addr = multiaddr(peer)\n    }\n    res.peer = PeerId.createFromB58String(res.addr.getPeerId())\n  } catch (error) {\n    res.error = error\n    res.rawPeerInfo = peer\n  }\n  return res\n}\n\nfunction parsePeer (verbose, peer) {\n  const res = {}\n  try {\n    res.addr = multiaddr(peer.Addr)\n    res.peer = PeerId.createFromB58String(peer.Peer)\n    res.muxer = peer.Muxer\n  } catch (error) {\n    res.error = error\n    res.rawPeerInfo = peer\n  }\n  if (peer.Latency) {\n    res.latency = peer.Latency\n  }\n  if (peer.Streams) {\n    res.streams = peer.Streams\n  }\n  return res\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}