{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst {\n  DAGNode,\n  DAGLink\n} = require('ipld-dag-pb');\n\nconst CID = require('cids');\n\nconst LRU = require('lru-cache');\n\nconst lruOptions = {\n  max: 128\n};\nconst cache = new LRU(lruOptions);\n\nmodule.exports = send => {\n  return promisify((cid, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    let cidB58Str;\n\n    try {\n      cid = new CID(cid);\n      cidB58Str = cid.toBaseEncodedString();\n    } catch (err) {\n      return callback(err);\n    }\n\n    const node = cache.get(cidB58Str);\n\n    if (node) {\n      return callback(null, node);\n    }\n\n    send({\n      path: 'object/get',\n      args: cidB58Str,\n      qs: {\n        'data-encoding': 'base64'\n      }\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      const links = result.Links.map(l => new DAGLink(l.Name, l.Size, l.Hash));\n      const node = DAGNode.create(Buffer.from(result.Data, 'base64'), links);\n      cache.set(cidB58Str, node);\n      callback(null, node);\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","DAGNode","DAGLink","CID","LRU","lruOptions","max","cache","module","exports","send","cid","options","callback","cidB58Str","toBaseEncodedString","err","node","get","path","args","qs","result","links","Links","map","l","Name","Size","Hash","create","Buffer","from","Data","set"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipfs-http-client/src/object/get.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst { DAGNode, DAGLink } = require('ipld-dag-pb')\nconst CID = require('cids')\nconst LRU = require('lru-cache')\nconst lruOptions = {\n  max: 128\n}\n\nconst cache = new LRU(lruOptions)\n\nmodule.exports = (send) => {\n  return promisify((cid, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n\n    if (!options) {\n      options = {}\n    }\n\n    let cidB58Str\n\n    try {\n      cid = new CID(cid)\n      cidB58Str = cid.toBaseEncodedString()\n    } catch (err) {\n      return callback(err)\n    }\n\n    const node = cache.get(cidB58Str)\n\n    if (node) {\n      return callback(null, node)\n    }\n\n    send({\n      path: 'object/get',\n      args: cidB58Str,\n      qs: {\n        'data-encoding': 'base64'\n      }\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const links = result.Links.map(l => new DAGLink(l.Name, l.Size, l.Hash))\n      const node = DAGNode.create(Buffer.from(result.Data, 'base64'), links)\n\n      cache.set(cidB58Str, node)\n      callback(null, node)\n    })\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAM;EAAEC,OAAF;EAAWC;AAAX,IAAuBF,OAAO,CAAC,aAAD,CAApC;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMK,UAAU,GAAG;EACjBC,GAAG,EAAE;AADY,CAAnB;AAIA,MAAMC,KAAK,GAAG,IAAIH,GAAJ,CAAQC,UAAR,CAAd;;AAEAG,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,OAAOX,SAAS,CAAC,CAACY,GAAD,EAAMC,OAAN,EAAeC,QAAf,KAA4B;IAC3C,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;MACjCC,QAAQ,GAAGD,OAAX;MACAA,OAAO,GAAG,EAAV;IACD;;IAED,IAAI,CAACA,OAAL,EAAc;MACZA,OAAO,GAAG,EAAV;IACD;;IAED,IAAIE,SAAJ;;IAEA,IAAI;MACFH,GAAG,GAAG,IAAIR,GAAJ,CAAQQ,GAAR,CAAN;MACAG,SAAS,GAAGH,GAAG,CAACI,mBAAJ,EAAZ;IACD,CAHD,CAGE,OAAOC,GAAP,EAAY;MACZ,OAAOH,QAAQ,CAACG,GAAD,CAAf;IACD;;IAED,MAAMC,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAUJ,SAAV,CAAb;;IAEA,IAAIG,IAAJ,EAAU;MACR,OAAOJ,QAAQ,CAAC,IAAD,EAAOI,IAAP,CAAf;IACD;;IAEDP,IAAI,CAAC;MACHS,IAAI,EAAE,YADH;MAEHC,IAAI,EAAEN,SAFH;MAGHO,EAAE,EAAE;QACF,iBAAiB;MADf;IAHD,CAAD,EAMD,CAACL,GAAD,EAAMM,MAAN,KAAiB;MAClB,IAAIN,GAAJ,EAAS;QACP,OAAOH,QAAQ,CAACG,GAAD,CAAf;MACD;;MAED,MAAMO,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiBC,CAAC,IAAI,IAAIxB,OAAJ,CAAYwB,CAAC,CAACC,IAAd,EAAoBD,CAAC,CAACE,IAAtB,EAA4BF,CAAC,CAACG,IAA9B,CAAtB,CAAd;MACA,MAAMZ,IAAI,GAAGhB,OAAO,CAAC6B,MAAR,CAAeC,MAAM,CAACC,IAAP,CAAYV,MAAM,CAACW,IAAnB,EAAyB,QAAzB,CAAf,EAAmDV,KAAnD,CAAb;MAEAhB,KAAK,CAAC2B,GAAN,CAAUpB,SAAV,EAAqBG,IAArB;MACAJ,QAAQ,CAAC,IAAD,EAAOI,IAAP,CAAR;IACD,CAhBG,CAAJ;EAiBD,CA1Ce,CAAhB;AA2CD,CA5CD"},"metadata":{},"sourceType":"script"}