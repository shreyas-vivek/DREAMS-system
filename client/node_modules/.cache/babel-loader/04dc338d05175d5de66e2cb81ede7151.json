{"ast":null,"code":"'use strict';\n\nconst bs58 = require('bs58');\n\nmodule.exports = {\n  deserialize(data, enc) {\n    enc = enc ? enc.toLowerCase() : 'json';\n\n    if (enc === 'json') {\n      return deserializeFromJson(data);\n    } else if (enc === 'base64') {\n      return deserializeFromBase64(data);\n    }\n\n    throw new Error(`Unsupported encoding: '${enc}'`);\n  }\n\n};\n\nfunction deserializeFromJson(data) {\n  const json = JSON.parse(data);\n  return deserializeFromBase64(json);\n}\n\nfunction deserializeFromBase64(obj) {\n  if (!isPubsubMessage(obj)) {\n    throw new Error(`Not a pubsub message`);\n  }\n\n  return {\n    from: bs58.encode(Buffer.from(obj.from, 'base64')).toString(),\n    seqno: Buffer.from(obj.seqno, 'base64'),\n    data: Buffer.from(obj.data, 'base64'),\n    topicIDs: obj.topicIDs || obj.topicCIDs\n  };\n}\n\nfunction isPubsubMessage(obj) {\n  return obj && obj.from && obj.seqno && obj.data && (obj.topicIDs || obj.topicCIDs);\n}","map":{"version":3,"names":["bs58","require","module","exports","deserialize","data","enc","toLowerCase","deserializeFromJson","deserializeFromBase64","Error","json","JSON","parse","obj","isPubsubMessage","from","encode","Buffer","toString","seqno","topicIDs","topicCIDs"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-http-client/src/utils/pubsub-message-utils.js"],"sourcesContent":["'use strict'\n\nconst bs58 = require('bs58')\n\nmodule.exports = {\n  deserialize (data, enc) {\n    enc = enc ? enc.toLowerCase() : 'json'\n\n    if (enc === 'json') {\n      return deserializeFromJson(data)\n    } else if (enc === 'base64') {\n      return deserializeFromBase64(data)\n    }\n\n    throw new Error(`Unsupported encoding: '${enc}'`)\n  }\n}\n\nfunction deserializeFromJson (data) {\n  const json = JSON.parse(data)\n  return deserializeFromBase64(json)\n}\n\nfunction deserializeFromBase64 (obj) {\n  if (!isPubsubMessage(obj)) {\n    throw new Error(`Not a pubsub message`)\n  }\n\n  return {\n    from: bs58.encode(Buffer.from(obj.from, 'base64')).toString(),\n    seqno: Buffer.from(obj.seqno, 'base64'),\n    data: Buffer.from(obj.data, 'base64'),\n    topicIDs: obj.topicIDs || obj.topicCIDs\n  }\n}\n\nfunction isPubsubMessage (obj) {\n  return obj && obj.from && obj.seqno && obj.data && (obj.topicIDs || obj.topicCIDs)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,WAAW,CAAEC,IAAF,EAAQC,GAAR,EAAa;IACtBA,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAH,GAAuB,MAAhC;;IAEA,IAAID,GAAG,KAAK,MAAZ,EAAoB;MAClB,OAAOE,mBAAmB,CAACH,IAAD,CAA1B;IACD,CAFD,MAEO,IAAIC,GAAG,KAAK,QAAZ,EAAsB;MAC3B,OAAOG,qBAAqB,CAACJ,IAAD,CAA5B;IACD;;IAED,MAAM,IAAIK,KAAJ,CAAW,0BAAyBJ,GAAI,GAAxC,CAAN;EACD;;AAXc,CAAjB;;AAcA,SAASE,mBAAT,CAA8BH,IAA9B,EAAoC;EAClC,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAb;EACA,OAAOI,qBAAqB,CAACE,IAAD,CAA5B;AACD;;AAED,SAASF,qBAAT,CAAgCK,GAAhC,EAAqC;EACnC,IAAI,CAACC,eAAe,CAACD,GAAD,CAApB,EAA2B;IACzB,MAAM,IAAIJ,KAAJ,CAAW,sBAAX,CAAN;EACD;;EAED,OAAO;IACLM,IAAI,EAAEhB,IAAI,CAACiB,MAAL,CAAYC,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACE,IAAhB,EAAsB,QAAtB,CAAZ,EAA6CG,QAA7C,EADD;IAELC,KAAK,EAAEF,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACM,KAAhB,EAAuB,QAAvB,CAFF;IAGLf,IAAI,EAAEa,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACT,IAAhB,EAAsB,QAAtB,CAHD;IAILgB,QAAQ,EAAEP,GAAG,CAACO,QAAJ,IAAgBP,GAAG,CAACQ;EAJzB,CAAP;AAMD;;AAED,SAASP,eAAT,CAA0BD,GAA1B,EAA+B;EAC7B,OAAOA,GAAG,IAAIA,GAAG,CAACE,IAAX,IAAmBF,GAAG,CAACM,KAAvB,IAAgCN,GAAG,CAACT,IAApC,KAA6CS,GAAG,CAACO,QAAJ,IAAgBP,GAAG,CAACQ,SAAjE,CAAP;AACD"},"metadata":{},"sourceType":"script"}