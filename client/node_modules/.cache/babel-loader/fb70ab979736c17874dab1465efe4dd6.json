{"ast":null,"code":"'use strict';\n\nconst isNode = require('detect-node');\n\nconst promisify = require('promisify-es6');\n\nconst SendOneFile = require('../utils/send-one-file-multiple-results');\n\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter');\n\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'add');\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' && callback === undefined) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!isNode) {\n      return callback(new Error('fsAdd does not work in the browser'));\n    }\n\n    if (typeof path !== 'string') {\n      return callback(new Error('\"path\" must be a string'));\n    }\n\n    const requestOpts = {\n      qs: opts,\n      converter: FileResultStreamConverter\n    };\n    sendOneFile(path, requestOpts, callback);\n  });\n};","map":{"version":3,"names":["isNode","require","promisify","SendOneFile","FileResultStreamConverter","module","exports","send","sendOneFile","path","opts","callback","undefined","Error","requestOpts","qs","converter"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-http-client/src/files-regular/add-from-fs.js"],"sourcesContent":["'use strict'\n\nconst isNode = require('detect-node')\nconst promisify = require('promisify-es6')\nconst SendOneFile = require('../utils/send-one-file-multiple-results')\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter')\n\nmodule.exports = (send) => {\n  const sendOneFile = SendOneFile(send, 'add')\n\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' &&\n        callback === undefined) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' &&\n        typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    if (!isNode) {\n      return callback(new Error('fsAdd does not work in the browser'))\n    }\n\n    if (typeof path !== 'string') {\n      return callback(new Error('\"path\" must be a string'))\n    }\n\n    const requestOpts = {\n      qs: opts,\n      converter: FileResultStreamConverter\n    }\n    sendOneFile(path, requestOpts, callback)\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,yCAAD,CAA3B;;AACA,MAAMG,yBAAyB,GAAGH,OAAO,CAAC,uCAAD,CAAzC;;AAEAI,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,MAAMC,WAAW,GAAGL,WAAW,CAACI,IAAD,EAAO,KAAP,CAA/B;EAEA,OAAOL,SAAS,CAAC,CAACO,IAAD,EAAOC,IAAP,EAAaC,QAAb,KAA0B;IACzC,IAAI,OAAOD,IAAP,KAAgB,UAAhB,IACAC,QAAQ,KAAKC,SADjB,EAC4B;MAC1BD,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD,CALwC,CAOzC;IACA;;;IACA,IAAI,OAAOA,IAAP,KAAgB,UAAhB,IACA,OAAOC,QAAP,KAAoB,UADxB,EACoC;MAClCA,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IAED,IAAI,CAACV,MAAL,EAAa;MACX,OAAOW,QAAQ,CAAC,IAAIE,KAAJ,CAAU,oCAAV,CAAD,CAAf;IACD;;IAED,IAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;MAC5B,OAAOE,QAAQ,CAAC,IAAIE,KAAJ,CAAU,yBAAV,CAAD,CAAf;IACD;;IAED,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAEL,IADc;MAElBM,SAAS,EAAEZ;IAFO,CAApB;IAIAI,WAAW,CAACC,IAAD,EAAOK,WAAP,EAAoBH,QAApB,CAAX;EACD,CA5Be,CAAhB;AA6BD,CAhCD"},"metadata":{},"sourceType":"script"}