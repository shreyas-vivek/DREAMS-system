{"ast":null,"code":"/*\nCopyright (c) 2014-2018, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n'use strict';\n\nconst {\n  Transform\n} = require('readable-stream');\n\nconst {\n  StringDecoder\n} = require('string_decoder');\n\nconst kLast = Symbol('last');\nconst kDecoder = Symbol('decoder');\n\nfunction transform(chunk, enc, cb) {\n  var list;\n\n  if (this.overflow) {\n    // Line buffer is full. Skip to start of next line.\n    var buf = this[kDecoder].write(chunk);\n    list = buf.split(this.matcher);\n    if (list.length === 1) return cb(); // Line ending not found. Discard entire chunk.\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n\n    list.shift();\n    this.overflow = false;\n  } else {\n    this[kLast] += this[kDecoder].write(chunk);\n    list = this[kLast].split(this.matcher);\n  }\n\n  this[kLast] = list.pop();\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]));\n    } catch (error) {\n      return cb(error);\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength;\n  if (this.overflow && !this.skipOverflow) return cb(new Error('maximum buffer reached'));\n  cb();\n}\n\nfunction flush(cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end();\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]));\n    } catch (error) {\n      return cb(error);\n    }\n  }\n\n  cb();\n}\n\nfunction push(self, val) {\n  if (val !== undefined) {\n    self.push(val);\n  }\n}\n\nfunction noop(incoming) {\n  return incoming;\n}\n\nfunction split(matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/;\n  mapper = mapper || noop;\n  options = options || {}; // Test arguments explicitly.\n\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher;\n        matcher = /\\r?\\n/; // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher;\n        matcher = /\\r?\\n/;\n      }\n\n      break;\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper;\n        mapper = matcher;\n        matcher = /\\r?\\n/; // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper;\n        mapper = noop;\n      }\n\n  }\n\n  options = Object.assign({}, options);\n  options.transform = transform;\n  options.flush = flush;\n  options.readableObjectMode = true;\n  const stream = new Transform(options);\n  stream[kLast] = '';\n  stream[kDecoder] = new StringDecoder('utf8');\n  stream.matcher = matcher;\n  stream.mapper = mapper;\n  stream.maxLength = options.maxLength;\n  stream.skipOverflow = options.skipOverflow;\n  stream.overflow = false;\n  return stream;\n}\n\nmodule.exports = split;","map":{"version":3,"names":["Transform","require","StringDecoder","kLast","Symbol","kDecoder","transform","chunk","enc","cb","list","overflow","buf","write","split","matcher","length","shift","pop","i","push","mapper","error","maxLength","skipOverflow","Error","flush","end","self","val","undefined","noop","incoming","options","arguments","RegExp","Object","assign","readableObjectMode","stream","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/split2/index.js"],"sourcesContent":["/*\nCopyright (c) 2014-2018, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('readable-stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  var list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    var buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) return cb(new Error('maximum buffer reached'))\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow\n  stream.overflow = false\n\n  return stream\n}\n\nmodule.exports = split\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}