{"ast":null,"code":"'use strict';\n/**\n * Make certain getters enumnerable\n *\n * This can be used to add additional getters that are enumerable and hence\n * show up on an `Object.keys()` call.\n *\n * @param {Object} object - The object it should be applied to\n * @param {Array.<String>} fields - The fields that should be made enumnerable\n */\n\nconst addEnumerableGetters = (object, fields) => {\n  for (const field of fields) {\n    let prop;\n    let proto = object; // Walk up the proottype chain until a property with the given name is\n    // found\n\n    while (prop === undefined) {\n      proto = Object.getPrototypeOf(proto);\n\n      if (proto === null) {\n        throw new Error(`no getter named '${field}' found`);\n      }\n\n      prop = Object.getOwnPropertyDescriptor(proto, field);\n    } // There is a property with the correct name, but it's not a getter\n\n\n    if (prop.get === undefined) {\n      throw new Error(`no getter named '${field}' found`);\n    }\n\n    Object.defineProperty(object, field, {\n      enumerable: true,\n      get: prop.get\n    });\n  }\n};\n/**\n * Makes all properties with a leading underscore non-enumerable.\n *\n * @param {Object} object - The object it should be applied to\n */\n\n\nconst hidePrivateFields = object => {\n  for (const key in object) {\n    if (key[0] === '_') {\n      Object.defineProperty(object, key, {\n        enumerable: false\n      });\n    }\n  }\n};\n\nmodule.exports = {\n  addEnumerableGetters,\n  hidePrivateFields\n};","map":{"version":3,"names":["addEnumerableGetters","object","fields","field","prop","proto","undefined","Object","getPrototypeOf","Error","getOwnPropertyDescriptor","get","defineProperty","enumerable","hidePrivateFields","key","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipld-dag-pb/src/visibility.js"],"sourcesContent":["'use strict'\n\n/**\n * Make certain getters enumnerable\n *\n * This can be used to add additional getters that are enumerable and hence\n * show up on an `Object.keys()` call.\n *\n * @param {Object} object - The object it should be applied to\n * @param {Array.<String>} fields - The fields that should be made enumnerable\n */\nconst addEnumerableGetters = (object, fields) => {\n  for (const field of fields) {\n    let prop\n    let proto = object\n    // Walk up the proottype chain until a property with the given name is\n    // found\n    while (prop === undefined) {\n      proto = Object.getPrototypeOf(proto)\n      if (proto === null) {\n        throw new Error(`no getter named '${field}' found`)\n      }\n      prop = Object.getOwnPropertyDescriptor(proto, field)\n    }\n\n    // There is a property with the correct name, but it's not a getter\n    if (prop.get === undefined) {\n      throw new Error(`no getter named '${field}' found`)\n    }\n    Object.defineProperty(object, field, {\n      enumerable: true,\n      get: prop.get\n    })\n  }\n}\n\n/**\n * Makes all properties with a leading underscore non-enumerable.\n *\n * @param {Object} object - The object it should be applied to\n */\nconst hidePrivateFields = (object) => {\n  for (const key in object) {\n    if (key[0] === '_') {\n      Object.defineProperty(object, key, { enumerable: false })\n    }\n  }\n}\n\nmodule.exports = {\n  addEnumerableGetters,\n  hidePrivateFields\n}\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,oBAAoB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;EAC/C,KAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;IAC1B,IAAIE,IAAJ;IACA,IAAIC,KAAK,GAAGJ,MAAZ,CAF0B,CAG1B;IACA;;IACA,OAAOG,IAAI,KAAKE,SAAhB,EAA2B;MACzBD,KAAK,GAAGE,MAAM,CAACC,cAAP,CAAsBH,KAAtB,CAAR;;MACA,IAAIA,KAAK,KAAK,IAAd,EAAoB;QAClB,MAAM,IAAII,KAAJ,CAAW,oBAAmBN,KAAM,SAApC,CAAN;MACD;;MACDC,IAAI,GAAGG,MAAM,CAACG,wBAAP,CAAgCL,KAAhC,EAAuCF,KAAvC,CAAP;IACD,CAXyB,CAa1B;;;IACA,IAAIC,IAAI,CAACO,GAAL,KAAaL,SAAjB,EAA4B;MAC1B,MAAM,IAAIG,KAAJ,CAAW,oBAAmBN,KAAM,SAApC,CAAN;IACD;;IACDI,MAAM,CAACK,cAAP,CAAsBX,MAAtB,EAA8BE,KAA9B,EAAqC;MACnCU,UAAU,EAAE,IADuB;MAEnCF,GAAG,EAAEP,IAAI,CAACO;IAFyB,CAArC;EAID;AACF,CAvBD;AAyBA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,iBAAiB,GAAIb,MAAD,IAAY;EACpC,KAAK,MAAMc,GAAX,IAAkBd,MAAlB,EAA0B;IACxB,IAAIc,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;MAClBR,MAAM,CAACK,cAAP,CAAsBX,MAAtB,EAA8Bc,GAA9B,EAAmC;QAAEF,UAAU,EAAE;MAAd,CAAnC;IACD;EACF;AACF,CAND;;AAQAG,MAAM,CAACC,OAAP,GAAiB;EACfjB,oBADe;EAEfc;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}