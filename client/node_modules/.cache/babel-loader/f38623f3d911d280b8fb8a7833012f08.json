{"ast":null,"code":"'use strict';\n\nconst IsIpfs = require('is-ipfs');\n\nconst promisify = require('promisify-es6');\n\nconst streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer');\n\nconst moduleConfig = require('../utils/module-config');\n\nconst cleanCID = require('../utils/clean-cid');\n\nmodule.exports = arg => {\n  const send = moduleConfig(arg);\n  const refs = promisify((args, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = module.exports.normalizeOpts(opts);\n\n    try {\n      args = module.exports.checkArgs(args);\n    } catch (err) {\n      return callback(err);\n    }\n\n    const transform = (res, cb) => {\n      cb(null, res.map(r => ({\n        ref: r.Ref,\n        err: r.Err\n      })));\n    };\n\n    const request = {\n      args,\n      path: 'refs',\n      qs: opts\n    };\n    send(request, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      streamToValueWithTransformer(result, transform, callback);\n    });\n  });\n  refs.local = require('./refs-local')(arg);\n  refs.localReadableStream = require('./refs-local-readable-stream')(arg);\n  refs.localPullStream = require('./refs-local-pull-stream')(arg);\n  return refs;\n};\n\nmodule.exports.checkArgs = args => {\n  const isArray = Array.isArray(args);\n  args = isArray ? args : [args];\n  const res = [];\n\n  for (let arg of args) {\n    try {\n      arg = cleanCID(arg);\n    } catch (err) {\n      if (!IsIpfs.ipfsPath(arg)) {\n        throw err;\n      }\n    }\n\n    res.push(arg);\n  }\n\n  return isArray ? res : res[0];\n};\n\nmodule.exports.normalizeOpts = opts => {\n  opts = opts || {};\n\n  if (typeof opts.maxDepth === 'number') {\n    opts['max-depth'] = opts.maxDepth;\n  }\n\n  return opts;\n};","map":{"version":3,"names":["IsIpfs","require","promisify","streamToValueWithTransformer","moduleConfig","cleanCID","module","exports","arg","send","refs","args","opts","callback","normalizeOpts","checkArgs","err","transform","res","cb","map","r","ref","Ref","Err","request","path","qs","result","local","localReadableStream","localPullStream","isArray","Array","ipfsPath","push","maxDepth"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-http-client/src/files-regular/refs.js"],"sourcesContent":["'use strict'\n\nconst IsIpfs = require('is-ipfs')\nconst promisify = require('promisify-es6')\nconst streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer')\nconst moduleConfig = require('../utils/module-config')\nconst cleanCID = require('../utils/clean-cid')\n\nmodule.exports = (arg) => {\n  const send = moduleConfig(arg)\n\n  const refs = promisify((args, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    opts = module.exports.normalizeOpts(opts)\n\n    try {\n      args = module.exports.checkArgs(args)\n    } catch (err) {\n      return callback(err)\n    }\n\n    const transform = (res, cb) => {\n      cb(null, res.map(r => ({ ref: r.Ref, err: r.Err })))\n    }\n\n    const request = {\n      args,\n      path: 'refs',\n      qs: opts\n    }\n    send(request, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      streamToValueWithTransformer(result, transform, callback)\n    })\n  })\n\n  refs.local = require('./refs-local')(arg)\n  refs.localReadableStream = require('./refs-local-readable-stream')(arg)\n  refs.localPullStream = require('./refs-local-pull-stream')(arg)\n\n  return refs\n}\n\nmodule.exports.checkArgs = (args) => {\n  const isArray = Array.isArray(args)\n  args = isArray ? args : [args]\n\n  const res = []\n  for (let arg of args) {\n    try {\n      arg = cleanCID(arg)\n    } catch (err) {\n      if (!IsIpfs.ipfsPath(arg)) {\n        throw err\n      }\n    }\n    res.push(arg)\n  }\n\n  return isArray ? res : res[0]\n}\n\nmodule.exports.normalizeOpts = (opts) => {\n  opts = opts || {}\n  if (typeof opts.maxDepth === 'number') {\n    opts['max-depth'] = opts.maxDepth\n  }\n  return opts\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}