{"ast":null,"code":"var Transform = require('readable-stream').Transform,\n    inherits = require('inherits');\n\nfunction DestroyableTransform(opts) {\n  Transform.call(this, opts);\n  this._destroyed = false;\n}\n\ninherits(DestroyableTransform, Transform);\n\nDestroyableTransform.prototype.destroy = function (err) {\n  if (this._destroyed) return;\n  this._destroyed = true;\n  var self = this;\n  process.nextTick(function () {\n    if (err) self.emit('error', err);\n    self.emit('close');\n  });\n}; // a noop _transform function\n\n\nfunction noop(chunk, enc, callback) {\n  callback(null, chunk);\n} // create a new export function, used by both the main export and\n// the .ctor export, contains common logic for dealing with arguments\n\n\nfunction through2(construct) {\n  return function (options, transform, flush) {\n    if (typeof options == 'function') {\n      flush = transform;\n      transform = options;\n      options = {};\n    }\n\n    if (typeof transform != 'function') transform = noop;\n    if (typeof flush != 'function') flush = null;\n    return construct(options, transform, flush);\n  };\n} // main export, just make me a transform stream!\n\n\nmodule.exports = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(options);\n  t2._transform = transform;\n  if (flush) t2._flush = flush;\n  return t2;\n}); // make me a reusable prototype that I can `new`, or implicitly `new`\n// with a constructor call\n\nmodule.exports.ctor = through2(function (options, transform, flush) {\n  function Through2(override) {\n    if (!(this instanceof Through2)) return new Through2(override);\n    this.options = Object.assign({}, options, override);\n    DestroyableTransform.call(this, this.options);\n  }\n\n  inherits(Through2, DestroyableTransform);\n  Through2.prototype._transform = transform;\n  if (flush) Through2.prototype._flush = flush;\n  return Through2;\n});\nmodule.exports.obj = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(Object.assign({\n    objectMode: true,\n    highWaterMark: 16\n  }, options));\n  t2._transform = transform;\n  if (flush) t2._flush = flush;\n  return t2;\n});","map":{"version":3,"names":["Transform","require","inherits","DestroyableTransform","opts","call","_destroyed","prototype","destroy","err","self","process","nextTick","emit","noop","chunk","enc","callback","through2","construct","options","transform","flush","module","exports","t2","_transform","_flush","ctor","Through2","override","Object","assign","obj","objectMode","highWaterMark"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ndjson/node_modules/through2/through2.js"],"sourcesContent":["var Transform = require('readable-stream').Transform\n  , inherits  = require('inherits')\n\nfunction DestroyableTransform(opts) {\n  Transform.call(this, opts)\n  this._destroyed = false\n}\n\ninherits(DestroyableTransform, Transform)\n\nDestroyableTransform.prototype.destroy = function(err) {\n  if (this._destroyed) return\n  this._destroyed = true\n  \n  var self = this\n  process.nextTick(function() {\n    if (err)\n      self.emit('error', err)\n    self.emit('close')\n  })\n}\n\n// a noop _transform function\nfunction noop (chunk, enc, callback) {\n  callback(null, chunk)\n}\n\n\n// create a new export function, used by both the main export and\n// the .ctor export, contains common logic for dealing with arguments\nfunction through2 (construct) {\n  return function (options, transform, flush) {\n    if (typeof options == 'function') {\n      flush     = transform\n      transform = options\n      options   = {}\n    }\n\n    if (typeof transform != 'function')\n      transform = noop\n\n    if (typeof flush != 'function')\n      flush = null\n\n    return construct(options, transform, flush)\n  }\n}\n\n\n// main export, just make me a transform stream!\nmodule.exports = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(options)\n\n  t2._transform = transform\n\n  if (flush)\n    t2._flush = flush\n\n  return t2\n})\n\n\n// make me a reusable prototype that I can `new`, or implicitly `new`\n// with a constructor call\nmodule.exports.ctor = through2(function (options, transform, flush) {\n  function Through2 (override) {\n    if (!(this instanceof Through2))\n      return new Through2(override)\n\n    this.options = Object.assign({}, options, override)\n\n    DestroyableTransform.call(this, this.options)\n  }\n\n  inherits(Through2, DestroyableTransform)\n\n  Through2.prototype._transform = transform\n\n  if (flush)\n    Through2.prototype._flush = flush\n\n  return Through2\n})\n\n\nmodule.exports.obj = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(Object.assign({ objectMode: true, highWaterMark: 16 }, options))\n\n  t2._transform = transform\n\n  if (flush)\n    t2._flush = flush\n\n  return t2\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}