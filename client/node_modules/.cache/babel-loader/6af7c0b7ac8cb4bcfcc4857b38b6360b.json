{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst CID = require('cids');\n\nmodule.exports = send => {\n  return promisify((cid, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    try {\n      cid = new CID(cid);\n    } catch (err) {\n      return callback(err);\n    }\n\n    send({\n      path: 'bitswap/unwant',\n      args: cid.toBaseEncodedString(),\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","CID","module","exports","send","cid","opts","callback","err","path","args","toBaseEncodedString","qs"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipfs-http-client/src/bitswap/unwant.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((cid, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    try {\n      cid = new CID(cid)\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'bitswap/unwant',\n      args: cid.toBaseEncodedString(),\n      qs: opts\n    }, callback)\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,OAAOL,SAAS,CAAC,CAACM,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;IACxC,IAAI,OAAQD,IAAR,KAAkB,UAAtB,EAAkC;MAChCC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IAED,IAAI;MACFD,GAAG,GAAG,IAAIJ,GAAJ,CAAQI,GAAR,CAAN;IACD,CAFD,CAEE,OAAOG,GAAP,EAAY;MACZ,OAAOD,QAAQ,CAACC,GAAD,CAAf;IACD;;IAEDJ,IAAI,CAAC;MACHK,IAAI,EAAE,gBADH;MAEHC,IAAI,EAAEL,GAAG,CAACM,mBAAJ,EAFH;MAGHC,EAAE,EAAEN;IAHD,CAAD,EAIDC,QAJC,CAAJ;EAKD,CAjBe,CAAhB;AAkBD,CAnBD"},"metadata":{},"sourceType":"script"}