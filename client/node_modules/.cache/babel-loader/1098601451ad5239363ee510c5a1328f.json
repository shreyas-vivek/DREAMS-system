{"ast":null,"code":"var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar stream = require('readable-stream');\n\nvar IncomingMessage = function (response, mode, fetchTimer) {\n  stream.Readable.call(this);\n  this._mode = mode;\n  this.headers = {};\n  this.rawHeaders = [];\n  this.trailers = {};\n  this.rawTrailers = []; // Fake the 'close' event, but only once 'end' fires\n\n  this.on('end', () => {\n    // The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n    process.nextTick(() => this.emit('close'));\n  });\n  this._fetchResponse = response;\n  this.url = response.url;\n  this.statusCode = response.status;\n  this.statusMessage = response.statusText;\n  response.headers.forEach((header, key) => {\n    this.headers[key.toLowerCase()] = header;\n    this.rawHeaders.push(key, header);\n  });\n\n  if (capability.writableStream) {\n    var writable = new WritableStream({\n      write: chunk => {\n        return new Promise((resolve, reject) => {\n          if (this._destroyed) {\n            reject();\n          } else if (this.push(Buffer.from(chunk))) {\n            resolve();\n          } else {\n            this._resumeFetch = resolve;\n          }\n        });\n      },\n      close: () => {\n        clearTimeout(fetchTimer);\n\n        if (!this._destroyed) {\n          this.push(null);\n        }\n      },\n      abort: err => {\n        if (!this._destroyed) {\n          this.emit('error', err);\n        }\n      }\n    });\n\n    try {\n      response.body.pipeTo(writable).catch(err => {\n        console.log(err);\n        self.clearTimeout(fetchTimer);\n\n        if (!this._destroyed) {\n          this.emit('error', err);\n        }\n      });\n      return;\n    } catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\n  } // fallback for when writableStream or pipeTo aren't available\n\n\n  var reader = response.body.getReader();\n\n  function read(context) {\n    reader.read().then(result => {\n      if (context._destroyed) {\n        return;\n      }\n\n      if (result.done) {\n        clearTimeout(fetchTimer);\n        context.push(null);\n        return;\n      }\n\n      context.push(Buffer.from(result.value));\n      read(context);\n    }).catch(err => {\n      clearTimeout(fetchTimer);\n\n      if (!context._destroyed) {\n        context.emit('error', err);\n      }\n    });\n  }\n\n  read(this);\n};\n\ninherits(IncomingMessage, stream.Readable);\n\nIncomingMessage.prototype._read = function () {\n  var resolve = this._resumeFetch;\n\n  if (resolve) {\n    this._resumeFetch = null;\n    resolve();\n  }\n};\n\nmodule.exports = IncomingMessage;","map":{"version":3,"names":["capability","require","inherits","stream","IncomingMessage","response","mode","fetchTimer","Readable","call","_mode","headers","rawHeaders","trailers","rawTrailers","on","process","nextTick","emit","_fetchResponse","url","statusCode","status","statusMessage","statusText","forEach","header","key","toLowerCase","push","writableStream","writable","WritableStream","write","chunk","Promise","resolve","reject","_destroyed","Buffer","from","_resumeFetch","close","clearTimeout","abort","err","body","pipeTo","catch","console","log","self","e","reader","getReader","read","context","then","result","done","value","prototype","_read","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/iso-stream-http/lib/incoming-message.js"],"sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = function (response, mode, fetchTimer) {\n\tstream.Readable.call(this)\n\n\tthis._mode = mode\n\tthis.headers = {}\n\tthis.rawHeaders = []\n\tthis.trailers = {}\n\tthis.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tthis.on('end',  () => {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(() =>this.emit('close'))\n\t})\n\n\tthis._fetchResponse = response\n\n\tthis.url = response.url\n\tthis.statusCode = response.status\n\tthis.statusMessage = response.statusText\n\t\n\tresponse.headers.forEach((header, key) => {\n\t\tthis.headers[key.toLowerCase()] = header\n\t\tthis.rawHeaders.push(key, header)\n\t})\n\n\tif (capability.writableStream) {\n\t\tvar writable = new WritableStream({\n\t\t\twrite: chunk => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (this._destroyed) {\n\t\t\t\t\t\treject()\n\t\t\t\t\t} else if(this.push(Buffer.from(chunk))) {\n\t\t\t\t\t\tresolve()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._resumeFetch = resolve\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tclose: () => {\n\t\t\t\tclearTimeout(fetchTimer)\n\t\t\t\tif (!this._destroyed){\n\t\t\t\t\tthis.push(null)\n\t\t\t\t}\n\t\t\t},\n\t\t\tabort: err => {\n\t\t\t\tif (!this._destroyed){\n\t\t\t\t\tthis.emit('error', err)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\ttry {\n\t\t\tresponse.body\n\t\t\t\t.pipeTo(writable)\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tself.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!this._destroyed){\n\t\t\t\t\t\tthis.emit('error', err)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\treturn\n\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t}\n\t// fallback for when writableStream or pipeTo aren't available\n\tvar reader = response.body.getReader()\n\t\n\tfunction read (context) {\n\t\treader.read()\n\t\t.then(result => {\n\t\t\tif (context._destroyed){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (result.done) {\n\t\t\t\tclearTimeout(fetchTimer)\n\t\t\t\tcontext.push(null)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tcontext.push(Buffer.from(result.value))\n\t\t\tread(context)\n\t\t})\n\t\t.catch(err => {\n\t\t\tclearTimeout(fetchTimer)\n\t\t\tif (!context._destroyed){\n\t\t\t\tcontext.emit('error', err)\n\t\t\t}\n\t\t})\n\t}\n\n\tread(this)\n\t\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar resolve = this._resumeFetch\n\tif (resolve) {\n\t\tthis._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nmodule.exports = IncomingMessage"],"mappings":"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"},"metadata":{},"sourceType":"script"}