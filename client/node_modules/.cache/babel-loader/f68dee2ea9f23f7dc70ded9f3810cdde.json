{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst withIs = require('class-is');\n/**\n * Represents an immutable block of data that is uniquely referenced with a cid.\n *\n * @constructor\n * @param {Buffer} data - The data to be stored in the block as a buffer.\n * @param {CID} cid - The cid of the data\n *\n * @example\n * const block = new Block(new Buffer('a012d83b20f9371...'))\n */\n\n\nclass Block {\n  constructor(data, cid) {\n    if (!data || !Buffer.isBuffer(data)) {\n      throw new Error('first argument  must be a buffer');\n    }\n\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID');\n    }\n\n    this._data = data;\n    this._cid = cid;\n  }\n  /**\n   * The data of this block.\n   *\n   * @type {Buffer}\n   */\n\n\n  get data() {\n    return this._data;\n  }\n\n  set data(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n  /**\n   * The cid of the data this block represents.\n   *\n   * @type {CID}\n   */\n\n\n  get cid() {\n    return this._cid;\n  }\n\n  set cid(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n\n}\n\nmodule.exports = withIs(Block, {\n  className: 'Block',\n  symbolName: '@ipfs/js-ipfs-block/block'\n});","map":{"version":3,"names":["CID","require","withIs","Block","constructor","data","cid","Buffer","isBuffer","Error","isCID","_data","_cid","val","module","exports","className","symbolName"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipfs-block/src/index.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst withIs = require('class-is')\n\n/**\n * Represents an immutable block of data that is uniquely referenced with a cid.\n *\n * @constructor\n * @param {Buffer} data - The data to be stored in the block as a buffer.\n * @param {CID} cid - The cid of the data\n *\n * @example\n * const block = new Block(new Buffer('a012d83b20f9371...'))\n */\nclass Block {\n  constructor (data, cid) {\n    if (!data || !Buffer.isBuffer(data)) {\n      throw new Error('first argument  must be a buffer')\n    }\n\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID')\n    }\n\n    this._data = data\n    this._cid = cid\n  }\n\n  /**\n   * The data of this block.\n   *\n   * @type {Buffer}\n   */\n  get data () {\n    return this._data\n  }\n\n  set data (val) {\n    throw new Error('Tried to change an immutable block')\n  }\n\n  /**\n   * The cid of the data this block represents.\n   *\n   * @type {CID}\n   */\n  get cid () {\n    return this._cid\n  }\n\n  set cid (val) {\n    throw new Error('Tried to change an immutable block')\n  }\n}\n\nmodule.exports = withIs(Block, { className: 'Block', symbolName: '@ipfs/js-ipfs-block/block' })\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,KAAN,CAAY;EACVC,WAAW,CAAEC,IAAF,EAAQC,GAAR,EAAa;IACtB,IAAI,CAACD,IAAD,IAAS,CAACE,MAAM,CAACC,QAAP,CAAgBH,IAAhB,CAAd,EAAqC;MACnC,MAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;IACD;;IAED,IAAI,CAACH,GAAD,IAAQ,CAACN,GAAG,CAACU,KAAJ,CAAUJ,GAAV,CAAb,EAA6B;MAC3B,MAAM,IAAIG,KAAJ,CAAU,+BAAV,CAAN;IACD;;IAED,KAAKE,KAAL,GAAaN,IAAb;IACA,KAAKO,IAAL,GAAYN,GAAZ;EACD;EAED;AACF;AACA;AACA;AACA;;;EACU,IAAJD,IAAI,GAAI;IACV,OAAO,KAAKM,KAAZ;EACD;;EAEO,IAAJN,IAAI,CAAEQ,GAAF,EAAO;IACb,MAAM,IAAIJ,KAAJ,CAAU,oCAAV,CAAN;EACD;EAED;AACF;AACA;AACA;AACA;;;EACS,IAAHH,GAAG,GAAI;IACT,OAAO,KAAKM,IAAZ;EACD;;EAEM,IAAHN,GAAG,CAAEO,GAAF,EAAO;IACZ,MAAM,IAAIJ,KAAJ,CAAU,oCAAV,CAAN;EACD;;AAtCS;;AAyCZK,MAAM,CAACC,OAAP,GAAiBb,MAAM,CAACC,KAAD,EAAQ;EAAEa,SAAS,EAAE,OAAb;EAAsBC,UAAU,EAAE;AAAlC,CAAR,CAAvB"},"metadata":{},"sourceType":"script"}