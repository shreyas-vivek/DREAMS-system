{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst ConcatStream = require('concat-stream');\n\nconst once = require('once');\n\nconst {\n  isSource\n} = require('is-pull-stream');\n\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter');\n\nconst SendFilesStream = require('../utils/send-files-stream');\n\nconst validateAddInput = require('ipfs-utils/src/files/add-input-validation');\n\nmodule.exports = send => {\n  const createAddStream = SendFilesStream(send, 'add');\n  const add = promisify((_files, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options;\n      options = null;\n    }\n\n    const callback = once(_callback);\n\n    if (!options) {\n      options = {};\n    }\n\n    options.converter = FileResultStreamConverter;\n\n    try {\n      validateAddInput(_files);\n    } catch (err) {\n      return callback(err);\n    }\n\n    const files = [].concat(_files);\n    const stream = createAddStream({\n      qs: options\n    });\n    const concat = ConcatStream(result => callback(null, result));\n    stream.once('error', callback);\n    stream.pipe(concat);\n    files.forEach(file => stream.write(file));\n    stream.end();\n  });\n  return function () {\n    const args = Array.from(arguments); // If we files.add(<pull stream>), then promisify thinks the pull stream is\n    // a callback! Add an empty options object in this case so that a promise\n    // is returned.\n\n    if (args.length === 1 && isSource(args[0])) {\n      args.push({});\n    }\n\n    return add.apply(null, args);\n  };\n};","map":{"version":3,"names":["promisify","require","ConcatStream","once","isSource","FileResultStreamConverter","SendFilesStream","validateAddInput","module","exports","send","createAddStream","add","_files","options","_callback","callback","converter","err","files","concat","stream","qs","result","pipe","forEach","file","write","end","args","Array","from","arguments","length","push","apply"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-http-client/src/files-regular/add.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst ConcatStream = require('concat-stream')\nconst once = require('once')\nconst { isSource } = require('is-pull-stream')\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter')\nconst SendFilesStream = require('../utils/send-files-stream')\nconst validateAddInput = require('ipfs-utils/src/files/add-input-validation')\n\nmodule.exports = (send) => {\n  const createAddStream = SendFilesStream(send, 'add')\n\n  const add = promisify((_files, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options\n      options = null\n    }\n    const callback = once(_callback)\n\n    if (!options) {\n      options = {}\n    }\n    options.converter = FileResultStreamConverter\n\n    try {\n      validateAddInput(_files)\n    } catch (err) {\n      return callback(err)\n    }\n\n    const files = [].concat(_files)\n\n    const stream = createAddStream({ qs: options })\n    const concat = ConcatStream((result) => callback(null, result))\n    stream.once('error', callback)\n    stream.pipe(concat)\n\n    files.forEach((file) => stream.write(file))\n    stream.end()\n  })\n\n  return function () {\n    const args = Array.from(arguments)\n\n    // If we files.add(<pull stream>), then promisify thinks the pull stream is\n    // a callback! Add an empty options object in this case so that a promise\n    // is returned.\n    if (args.length === 1 && isSource(args[0])) {\n      args.push({})\n    }\n\n    return add.apply(null, args)\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;EAAEG;AAAF,IAAeH,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAMI,yBAAyB,GAAGJ,OAAO,CAAC,uCAAD,CAAzC;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAC,4BAAD,CAA/B;;AACA,MAAMM,gBAAgB,GAAGN,OAAO,CAAC,2CAAD,CAAhC;;AAEAO,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,MAAMC,eAAe,GAAGL,eAAe,CAACI,IAAD,EAAO,KAAP,CAAvC;EAEA,MAAME,GAAG,GAAGZ,SAAS,CAAC,CAACa,MAAD,EAASC,OAAT,EAAkBC,SAAlB,KAAgC;IACpD,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;MACjCC,SAAS,GAAGD,OAAZ;MACAA,OAAO,GAAG,IAAV;IACD;;IACD,MAAME,QAAQ,GAAGb,IAAI,CAACY,SAAD,CAArB;;IAEA,IAAI,CAACD,OAAL,EAAc;MACZA,OAAO,GAAG,EAAV;IACD;;IACDA,OAAO,CAACG,SAAR,GAAoBZ,yBAApB;;IAEA,IAAI;MACFE,gBAAgB,CAACM,MAAD,CAAhB;IACD,CAFD,CAEE,OAAOK,GAAP,EAAY;MACZ,OAAOF,QAAQ,CAACE,GAAD,CAAf;IACD;;IAED,MAAMC,KAAK,GAAG,GAAGC,MAAH,CAAUP,MAAV,CAAd;IAEA,MAAMQ,MAAM,GAAGV,eAAe,CAAC;MAAEW,EAAE,EAAER;IAAN,CAAD,CAA9B;IACA,MAAMM,MAAM,GAAGlB,YAAY,CAAEqB,MAAD,IAAYP,QAAQ,CAAC,IAAD,EAAOO,MAAP,CAArB,CAA3B;IACAF,MAAM,CAAClB,IAAP,CAAY,OAAZ,EAAqBa,QAArB;IACAK,MAAM,CAACG,IAAP,CAAYJ,MAAZ;IAEAD,KAAK,CAACM,OAAN,CAAeC,IAAD,IAAUL,MAAM,CAACM,KAAP,CAAaD,IAAb,CAAxB;IACAL,MAAM,CAACO,GAAP;EACD,CA3BoB,CAArB;EA6BA,OAAO,YAAY;IACjB,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAb,CADiB,CAGjB;IACA;IACA;;IACA,IAAIH,IAAI,CAACI,MAAL,KAAgB,CAAhB,IAAqB7B,QAAQ,CAACyB,IAAI,CAAC,CAAD,CAAL,CAAjC,EAA4C;MAC1CA,IAAI,CAACK,IAAL,CAAU,EAAV;IACD;;IAED,OAAOtB,GAAG,CAACuB,KAAJ,CAAU,IAAV,EAAgBN,IAAhB,CAAP;EACD,CAXD;AAYD,CA5CD"},"metadata":{},"sourceType":"script"}