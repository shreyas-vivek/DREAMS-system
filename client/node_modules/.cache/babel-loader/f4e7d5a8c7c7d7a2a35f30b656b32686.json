{"ast":null,"code":"'use strict';\n\nconst TransformStream = require('readable-stream').Transform;\n\nconst PubsubMessage = require('./pubsub-message-utils');\n\nclass PubsubMessageStream extends TransformStream {\n  constructor(options) {\n    const opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    super(opts);\n  }\n\n  static from(inputStream, callback) {\n    let outputStream = inputStream.pipe(new PubsubMessageStream());\n    inputStream.on('end', () => outputStream.emit('end'));\n    callback(null, outputStream);\n  }\n\n  _transform(obj, enc, callback) {\n    // go-ipfs returns '{}' as the very first object atm, we skip that\n    if (Object.keys(obj).length === 0) {\n      return callback();\n    }\n\n    try {\n      const msg = PubsubMessage.deserialize(obj, 'base64');\n      this.push(msg);\n      callback();\n    } catch (err) {\n      return callback(err);\n    }\n  }\n\n}\n\nmodule.exports = PubsubMessageStream;","map":{"version":3,"names":["TransformStream","require","Transform","PubsubMessage","PubsubMessageStream","constructor","options","opts","Object","assign","objectMode","from","inputStream","callback","outputStream","pipe","on","emit","_transform","obj","enc","keys","length","msg","deserialize","push","err","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DMR-master/client/node_modules/ipfs-http-client/src/utils/pubsub-message-stream.js"],"sourcesContent":["'use strict'\n\nconst TransformStream = require('readable-stream').Transform\nconst PubsubMessage = require('./pubsub-message-utils')\n\nclass PubsubMessageStream extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign(options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  static from (inputStream, callback) {\n    let outputStream = inputStream.pipe(new PubsubMessageStream())\n    inputStream.on('end', () => outputStream.emit('end'))\n    callback(null, outputStream)\n  }\n\n  _transform (obj, enc, callback) {\n    // go-ipfs returns '{}' as the very first object atm, we skip that\n    if (Object.keys(obj).length === 0) {\n      return callback()\n    }\n\n    try {\n      const msg = PubsubMessage.deserialize(obj, 'base64')\n      this.push(msg)\n      callback()\n    } catch (err) {\n      return callback(err)\n    }\n  }\n}\n\nmodule.exports = PubsubMessageStream\n"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,SAAnD;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,wBAAD,CAA7B;;AAEA,MAAMG,mBAAN,SAAkCJ,eAAlC,CAAkD;EAChDK,WAAW,CAAEC,OAAF,EAAW;IACpB,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAO,IAAI,EAAzB,EAA6B;MAAEI,UAAU,EAAE;IAAd,CAA7B,CAAb;IACA,MAAMH,IAAN;EACD;;EAEU,OAAJI,IAAI,CAAEC,WAAF,EAAeC,QAAf,EAAyB;IAClC,IAAIC,YAAY,GAAGF,WAAW,CAACG,IAAZ,CAAiB,IAAIX,mBAAJ,EAAjB,CAAnB;IACAQ,WAAW,CAACI,EAAZ,CAAe,KAAf,EAAsB,MAAMF,YAAY,CAACG,IAAb,CAAkB,KAAlB,CAA5B;IACAJ,QAAQ,CAAC,IAAD,EAAOC,YAAP,CAAR;EACD;;EAEDI,UAAU,CAAEC,GAAF,EAAOC,GAAP,EAAYP,QAAZ,EAAsB;IAC9B;IACA,IAAIL,MAAM,CAACa,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAAhC,EAAmC;MACjC,OAAOT,QAAQ,EAAf;IACD;;IAED,IAAI;MACF,MAAMU,GAAG,GAAGpB,aAAa,CAACqB,WAAd,CAA0BL,GAA1B,EAA+B,QAA/B,CAAZ;MACA,KAAKM,IAAL,CAAUF,GAAV;MACAV,QAAQ;IACT,CAJD,CAIE,OAAOa,GAAP,EAAY;MACZ,OAAOb,QAAQ,CAACa,GAAD,CAAf;IACD;EACF;;AAzB+C;;AA4BlDC,MAAM,CAACC,OAAP,GAAiBxB,mBAAjB"},"metadata":{},"sourceType":"script"}