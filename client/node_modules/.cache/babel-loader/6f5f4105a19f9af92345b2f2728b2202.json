{"ast":null,"code":"'use strict';\n\nconst {\n  Readable\n} = require('readable-stream');\n\nconst {\n  supportsFileReader\n} = require('../supports');\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.');\n  }\n\n  class FileStream extends Readable {\n    constructor(file) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      super(options);\n      this.file = file;\n      this.offset = options.offset || 0;\n      this.chunkSize = options.chunkSize || 1024 * 1024;\n      this.fileReader = new self.FileReader(file);\n\n      this.fileReader.onloadend = event => {\n        const data = event.target.result;\n\n        if (data.byteLength === 0) {\n          this.push(null);\n        }\n\n        this.push(new Uint8Array(data));\n      };\n\n      this.fileReader.onerror = err => this.destroy(err);\n    }\n\n    _read(size) {\n      const end = this.offset + this.chunkSize;\n      const slice = file.slice(this.offset, end);\n      this.fileReader.readAsArrayBuffer(slice);\n      this.offset = end;\n    }\n\n  }\n\n  return new FileStream(file, options);\n};\n\nmodule.exports = streamFromFileReader;","map":{"version":3,"names":["Readable","require","supportsFileReader","streamFromFileReader","file","options","Error","FileStream","constructor","offset","chunkSize","fileReader","self","FileReader","onloadend","event","data","target","result","byteLength","push","Uint8Array","onerror","err","destroy","_read","size","end","slice","readAsArrayBuffer","module","exports"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-utils/src/streams/stream-from-filereader.js"],"sourcesContent":["'use strict'\nconst { Readable } = require('readable-stream')\nconst { supportsFileReader } = require('../supports')\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.')\n  }\n  class FileStream extends Readable {\n    constructor (file, options = {}) {\n      super(options)\n      this.file = file\n      this.offset = options.offset || 0\n      this.chunkSize = options.chunkSize || 1024 * 1024\n      this.fileReader = new self.FileReader(file)\n      this.fileReader.onloadend = (event) => {\n        const data = event.target.result\n        if (data.byteLength === 0) {\n          this.push(null)\n        }\n        this.push(new Uint8Array(data))\n      }\n      this.fileReader.onerror = (err) => this.destroy(err)\n    }\n\n    _read (size) {\n      const end = this.offset + this.chunkSize\n      const slice = file.slice(this.offset, end)\n      this.fileReader.readAsArrayBuffer(slice)\n      this.offset = end\n    }\n  }\n\n  return new FileStream(file, options)\n}\n\nmodule.exports = streamFromFileReader\n"],"mappings":"AAAA;;AACA,MAAM;EAAEA;AAAF,IAAeC,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;EAAEC;AAAF,IAAyBD,OAAO,CAAC,aAAD,CAAtC;;AAEA,MAAME,oBAAoB,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;EAC9C,IAAI,CAACH,kBAAL,EAAyB;IACvB,MAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;EACD;;EACD,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;IAChCQ,WAAW,CAAEJ,IAAF,EAAsB;MAAA,IAAdC,OAAc,uEAAJ,EAAI;MAC/B,MAAMA,OAAN;MACA,KAAKD,IAAL,GAAYA,IAAZ;MACA,KAAKK,MAAL,GAAcJ,OAAO,CAACI,MAAR,IAAkB,CAAhC;MACA,KAAKC,SAAL,GAAiBL,OAAO,CAACK,SAAR,IAAqB,OAAO,IAA7C;MACA,KAAKC,UAAL,GAAkB,IAAIC,IAAI,CAACC,UAAT,CAAoBT,IAApB,CAAlB;;MACA,KAAKO,UAAL,CAAgBG,SAAhB,GAA6BC,KAAD,IAAW;QACrC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAA1B;;QACA,IAAIF,IAAI,CAACG,UAAL,KAAoB,CAAxB,EAA2B;UACzB,KAAKC,IAAL,CAAU,IAAV;QACD;;QACD,KAAKA,IAAL,CAAU,IAAIC,UAAJ,CAAeL,IAAf,CAAV;MACD,CAND;;MAOA,KAAKL,UAAL,CAAgBW,OAAhB,GAA2BC,GAAD,IAAS,KAAKC,OAAL,CAAaD,GAAb,CAAnC;IACD;;IAEDE,KAAK,CAAEC,IAAF,EAAQ;MACX,MAAMC,GAAG,GAAG,KAAKlB,MAAL,GAAc,KAAKC,SAA/B;MACA,MAAMkB,KAAK,GAAGxB,IAAI,CAACwB,KAAL,CAAW,KAAKnB,MAAhB,EAAwBkB,GAAxB,CAAd;MACA,KAAKhB,UAAL,CAAgBkB,iBAAhB,CAAkCD,KAAlC;MACA,KAAKnB,MAAL,GAAckB,GAAd;IACD;;EAtB+B;;EAyBlC,OAAO,IAAIpB,UAAJ,CAAeH,IAAf,EAAqBC,OAArB,CAAP;AACD,CA9BD;;AAgCAyB,MAAM,CAACC,OAAP,GAAiB5B,oBAAjB"},"metadata":{},"sourceType":"script"}