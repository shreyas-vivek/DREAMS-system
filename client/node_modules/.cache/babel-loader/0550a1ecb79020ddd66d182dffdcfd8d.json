{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst CID = require('cids');\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n\nconst SendOneFile = require('../utils/send-one-file');\n\nconst once = require('once');\n\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'object/put');\n  return promisify((obj, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options;\n      options = {};\n    }\n\n    const callback = once(_callback);\n\n    if (!options) {\n      options = {};\n    }\n\n    let tmpObj = {\n      Data: null,\n      Links: []\n    };\n\n    if (Buffer.isBuffer(obj)) {\n      if (!options.enc) {\n        tmpObj = {\n          Data: obj.toString(),\n          Links: []\n        };\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      tmpObj = {\n        Data: obj.Data.toString(),\n        Links: obj.Links.map(l => ({\n          Name: l.Name,\n          Hash: l.Hash.toString(),\n          Size: l.Tsize\n        }))\n      };\n    } else if (typeof obj === 'object') {\n      tmpObj.Data = obj.Data.toString();\n      tmpObj.Links = obj.Links;\n    } else {\n      return callback(new Error('obj not recognized'));\n    }\n\n    let buf;\n\n    if (Buffer.isBuffer(obj) && options.enc) {\n      buf = obj;\n    } else {\n      buf = Buffer.from(JSON.stringify(tmpObj));\n    }\n\n    const enc = options.enc || 'json';\n    const sendOptions = {\n      qs: {\n        inputenc: enc\n      }\n    };\n    sendOneFile(buf, sendOptions, (err, result) => {\n      if (err) {\n        return callback(err); // early\n      }\n\n      callback(null, new CID(result.Hash));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","CID","DAGNode","SendOneFile","once","module","exports","send","sendOneFile","obj","options","_callback","callback","tmpObj","Data","Links","Buffer","isBuffer","enc","toString","isDAGNode","map","l","Name","Hash","Size","Tsize","Error","buf","from","JSON","stringify","sendOptions","qs","inputenc","err","result"],"sources":["C:/Users/Shreyas/Desktop/DREAMS/DMR-master/DREAMS-system/client/node_modules/ipfs-http-client/src/object/put.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\nconst { DAGNode } = require('ipld-dag-pb')\n\nconst SendOneFile = require('../utils/send-one-file')\nconst once = require('once')\n\nmodule.exports = (send) => {\n  const sendOneFile = SendOneFile(send, 'object/put')\n\n  return promisify((obj, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options\n      options = {}\n    }\n\n    const callback = once(_callback)\n\n    if (!options) {\n      options = {}\n    }\n\n    let tmpObj = {\n      Data: null,\n      Links: []\n    }\n\n    if (Buffer.isBuffer(obj)) {\n      if (!options.enc) {\n        tmpObj = {\n          Data: obj.toString(),\n          Links: []\n        }\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      tmpObj = {\n        Data: obj.Data.toString(),\n        Links: obj.Links.map(l => ({\n          Name: l.Name,\n          Hash: l.Hash.toString(),\n          Size: l.Tsize\n        }))\n      }\n    } else if (typeof obj === 'object') {\n      tmpObj.Data = obj.Data.toString()\n      tmpObj.Links = obj.Links\n    } else {\n      return callback(new Error('obj not recognized'))\n    }\n\n    let buf\n    if (Buffer.isBuffer(obj) && options.enc) {\n      buf = obj\n    } else {\n      buf = Buffer.from(JSON.stringify(tmpObj))\n    }\n    const enc = options.enc || 'json'\n\n    const sendOptions = {\n      qs: { inputenc: enc }\n    }\n\n    sendOneFile(buf, sendOptions, (err, result) => {\n      if (err) {\n        return callback(err) // early\n      }\n\n      callback(null, new CID(result.Hash))\n    })\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAM;EAAEE;AAAF,IAAcF,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMG,WAAW,GAAGH,OAAO,CAAC,wBAAD,CAA3B;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEAK,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,MAAMC,WAAW,GAAGL,WAAW,CAACI,IAAD,EAAO,YAAP,CAA/B;EAEA,OAAOR,SAAS,CAAC,CAACU,GAAD,EAAMC,OAAN,EAAeC,SAAf,KAA6B;IAC5C,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;MACjCC,SAAS,GAAGD,OAAZ;MACAA,OAAO,GAAG,EAAV;IACD;;IAED,MAAME,QAAQ,GAAGR,IAAI,CAACO,SAAD,CAArB;;IAEA,IAAI,CAACD,OAAL,EAAc;MACZA,OAAO,GAAG,EAAV;IACD;;IAED,IAAIG,MAAM,GAAG;MACXC,IAAI,EAAE,IADK;MAEXC,KAAK,EAAE;IAFI,CAAb;;IAKA,IAAIC,MAAM,CAACC,QAAP,CAAgBR,GAAhB,CAAJ,EAA0B;MACxB,IAAI,CAACC,OAAO,CAACQ,GAAb,EAAkB;QAChBL,MAAM,GAAG;UACPC,IAAI,EAAEL,GAAG,CAACU,QAAJ,EADC;UAEPJ,KAAK,EAAE;QAFA,CAAT;MAID;IACF,CAPD,MAOO,IAAIb,OAAO,CAACkB,SAAR,CAAkBX,GAAlB,CAAJ,EAA4B;MACjCI,MAAM,GAAG;QACPC,IAAI,EAAEL,GAAG,CAACK,IAAJ,CAASK,QAAT,EADC;QAEPJ,KAAK,EAAEN,GAAG,CAACM,KAAJ,CAAUM,GAAV,CAAcC,CAAC,KAAK;UACzBC,IAAI,EAAED,CAAC,CAACC,IADiB;UAEzBC,IAAI,EAAEF,CAAC,CAACE,IAAF,CAAOL,QAAP,EAFmB;UAGzBM,IAAI,EAAEH,CAAC,CAACI;QAHiB,CAAL,CAAf;MAFA,CAAT;IAQD,CATM,MASA,IAAI,OAAOjB,GAAP,KAAe,QAAnB,EAA6B;MAClCI,MAAM,CAACC,IAAP,GAAcL,GAAG,CAACK,IAAJ,CAASK,QAAT,EAAd;MACAN,MAAM,CAACE,KAAP,GAAeN,GAAG,CAACM,KAAnB;IACD,CAHM,MAGA;MACL,OAAOH,QAAQ,CAAC,IAAIe,KAAJ,CAAU,oBAAV,CAAD,CAAf;IACD;;IAED,IAAIC,GAAJ;;IACA,IAAIZ,MAAM,CAACC,QAAP,CAAgBR,GAAhB,KAAwBC,OAAO,CAACQ,GAApC,EAAyC;MACvCU,GAAG,GAAGnB,GAAN;IACD,CAFD,MAEO;MACLmB,GAAG,GAAGZ,MAAM,CAACa,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAelB,MAAf,CAAZ,CAAN;IACD;;IACD,MAAMK,GAAG,GAAGR,OAAO,CAACQ,GAAR,IAAe,MAA3B;IAEA,MAAMc,WAAW,GAAG;MAClBC,EAAE,EAAE;QAAEC,QAAQ,EAAEhB;MAAZ;IADc,CAApB;IAIAV,WAAW,CAACoB,GAAD,EAAMI,WAAN,EAAmB,CAACG,GAAD,EAAMC,MAAN,KAAiB;MAC7C,IAAID,GAAJ,EAAS;QACP,OAAOvB,QAAQ,CAACuB,GAAD,CAAf,CADO,CACc;MACtB;;MAEDvB,QAAQ,CAAC,IAAD,EAAO,IAAIX,GAAJ,CAAQmC,MAAM,CAACZ,IAAf,CAAP,CAAR;IACD,CANU,CAAX;EAOD,CA3De,CAAhB;AA4DD,CA/DD"},"metadata":{},"sourceType":"script"}